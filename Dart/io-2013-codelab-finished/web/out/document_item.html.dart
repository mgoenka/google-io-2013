// Auto-generated from document_item.html.
// DO NOT EDIT.

library x_document_item;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';
import '_from_packages/writer/document.dart';
import 'app.dart' as app;



      /**
       * This Dart class defines the behavior and
       * state of the custom element.
       */
      class DocumentItem extends WebComponent {
  /** Autogenerated from the template. */

  /** CSS class constants. */
  static Map<String, String> _css = {};

  /** This field is deprecated, use getShadowRoot instead. */
  get _root => getShadowRoot("x-document-item");
  static final __shadowTemplate = new autogenerated.DocumentFragment.html('''

      <div class="item ">
          <div class="title"></div>
          <div class="modified"></div>

          <!-- STEP 3: Add delete button. -->
          <button class="delete">Ã—</button>
      </div>
    ''');
  autogenerated.ButtonElement __e18;
  autogenerated.DivElement __e15, __e17, __e19;
  autogenerated.Template __t;

  void created_autogenerated() {
    var __root = createShadowRoot("x-document-item");
    __t = new autogenerated.Template(__root);
    if (__root is autogenerated.ShadowRoot) __root.applyAuthorStyles = true;
    __root.nodes.add(__shadowTemplate.clone(true));
    __e19 = __root.nodes[1];
    __e15 = __e19.nodes[1];
    var __binding14 = __t.contentBind(() => title, false);
    __e15.nodes.add(__binding14);
    __e17 = __e19.nodes[3];
    var __binding16 = __t.contentBind(() => modified, false);
    __e17.nodes.add(__binding16);
    __e18 = __e19.nodes[7];
    __t.listen(__e18.onClick, ($event) { app.deleteDocument(doc); });
    __t.bindClass(__e19, () => isActiveClass, false);
    __t.create();
  }

  void inserted_autogenerated() {
    __t.insert();
  }

  void removed_autogenerated() {
    __t.remove();
    __t = __e19 = __e15 = __e17 = __e18 = null;
  }

  /** Original code from the component. */

        Document doc;

        String get title => doc.title.isEmpty ? 'Untitled' : doc.title;

        String get modified => dateFormat.format(doc.modified);

        String get isActiveClass => doc == app.activeDocument ? 'active': '';
      }
    
//@ sourceMappingURL=document_item.html.dart.map